services:
  backend:
    image: rust
    volumes:
      - ".:/app"
      - "cargo:/app/.cargo"
      - "target:/app/target"
    working_dir: /app
    environment:
      CARGO_HOME: /app/.cargo
      CARGO_TARGET_DIR: /app/target
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    command: cargo make --profile development backend-run

  frontend:
    image: rust
    volumes:
      - ".:/app"
      - "cargo:/app/.cargo"
      - "target:/app/target"
      - "rustup:/app/.rustup"
    working_dir: /app
    environment:
      CARGO_HOME: /app/.cargo
      CARGO_TARGET_DIR: /app/target
      RUSTUP_HOME: /app/.rustup
    ports:
      - 8080:8080
    depends_on:
      - backend
    command: cargo make --profile development frontend-run

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=db
      - PGDATA=/postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - "postgres:/postgres"

volumes:
  cargo:
  target:
  postgres:
  rustup:
